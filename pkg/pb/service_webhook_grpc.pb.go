// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.20.3
// source: service_webhook.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	MetaWebhook_CreateUser_FullMethodName = "/pb.MetaWebhook/CreateUser"
)

// MetaWebhookClient is the client API for MetaWebhook service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MetaWebhookClient interface {
	CreateUser(ctx context.Context, in *WebhookValidationRequest, opts ...grpc.CallOption) (*WebhookValidationResponse, error)
}

type metaWebhookClient struct {
	cc grpc.ClientConnInterface
}

func NewMetaWebhookClient(cc grpc.ClientConnInterface) MetaWebhookClient {
	return &metaWebhookClient{cc}
}

func (c *metaWebhookClient) CreateUser(ctx context.Context, in *WebhookValidationRequest, opts ...grpc.CallOption) (*WebhookValidationResponse, error) {
	out := new(WebhookValidationResponse)
	err := c.cc.Invoke(ctx, MetaWebhook_CreateUser_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetaWebhookServer is the server API for MetaWebhook service.
// All implementations must embed UnimplementedMetaWebhookServer
// for forward compatibility
type MetaWebhookServer interface {
	CreateUser(context.Context, *WebhookValidationRequest) (*WebhookValidationResponse, error)
	mustEmbedUnimplementedMetaWebhookServer()
}

// UnimplementedMetaWebhookServer must be embedded to have forward compatible implementations.
type UnimplementedMetaWebhookServer struct {
}

func (UnimplementedMetaWebhookServer) CreateUser(context.Context, *WebhookValidationRequest) (*WebhookValidationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (UnimplementedMetaWebhookServer) mustEmbedUnimplementedMetaWebhookServer() {}

// UnsafeMetaWebhookServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MetaWebhookServer will
// result in compilation errors.
type UnsafeMetaWebhookServer interface {
	mustEmbedUnimplementedMetaWebhookServer()
}

func RegisterMetaWebhookServer(s grpc.ServiceRegistrar, srv MetaWebhookServer) {
	s.RegisterService(&MetaWebhook_ServiceDesc, srv)
}

func _MetaWebhook_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WebhookValidationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaWebhookServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MetaWebhook_CreateUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaWebhookServer).CreateUser(ctx, req.(*WebhookValidationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MetaWebhook_ServiceDesc is the grpc.ServiceDesc for MetaWebhook service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MetaWebhook_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.MetaWebhook",
	HandlerType: (*MetaWebhookServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _MetaWebhook_CreateUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service_webhook.proto",
}
